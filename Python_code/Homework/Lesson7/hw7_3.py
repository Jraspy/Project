# Реализовать программу работы с органическими клетками, состоящими из ячеек. Необходимо создать класс Клетка.
# В его конструкторе инициализировать параметр, соответствующий количеству ячеек клетки (целое число).
# В классе должны быть реализованы методы перегрузки арифметических операторов:
# сложение (__add__()), вычитание (__sub__()), умножение (__mul__()), деление (__truediv__()).
# Данные методы должны применяться только к клеткам и выполнять увеличение, уменьшение, умножение и
# целочисленное (с округлением до целого) деление клеток, соответственно.
# Сложение. Объединение двух клеток.
# При этом число ячеек общей клетки должно равняться сумме ячеек исходных двух клеток.
# Вычитание. Участвуют две клетки.
# Операцию необходимо выполнять только если разность количества ячеек двух клеток больше нуля,
# иначе выводить соответствующее сообщение.
# Умножение. Создается общая клетка из двух.
# Число ячеек общей клетки определяется как произведение количества ячеек этих двух клеток.
# Деление. Создается общая клетка из двух.
# Число ячеек общей клетки определяется как целочисленное деление количества ячеек этих двух клеток.
# В классе необходимо реализовать метод make_order(), принимающий экземпляр класса и количество ячеек в ряду.
# Данный метод позволяет организовать ячейки по рядам.
# Метод должен возвращать строку вида *****\n*****\n*****..., где количество ячеек между \n равно переданному аргументу.
# Если ячеек на формирование ряда не хватает, то в последний ряд записываются все оставшиеся.
# Например, количество ячеек клетки равняется 12, количество ячеек в ряду — 5.
# Тогда метод make_order() вернет строку: *****\n*****\n**.
# Или, количество ячеек клетки равняется 15, количество ячеек в ряду — 5.
# Тогда метод make_order() вернет строку: *****\n*****\n*****.

class OrganicCell:
    def __init__(self, cells_count: int):
        self.cells_count = cells_count

    def __str__(self):
        return f"Количество ячеек: {self.cells_count}"

    def __add__(self, other):
        return self.cells_count + other.cells_count

    def __sub__(self, other):
        if self.cells_count > other.cells_count:
            return self.cells_count - other.cells_count
        else:
            print("Разность количества ячеек этих двух клеток меньше нуля!")

    def __truediv__(self, other):
        return self.cells_count // other.cells_count

    def __mul__(self, other):
        return self.cells_count * other.cells_count

    def make_order(self, order_count=5):
        result = ""
        for i in range(self.cells_count):
            if (i % order_count) == 0:
                result = result + '\n'
            result = result + '*'
        return result


my_cell1 = OrganicCell(3)
my_cell2 = OrganicCell(4)
my_cell3 = OrganicCell(my_cell1 + my_cell2)
my_cell4 = OrganicCell(my_cell2 - my_cell1)
my_cell5 = OrganicCell(my_cell1 * my_cell2)
my_cell6 = OrganicCell(my_cell5 / my_cell1)

print(my_cell3, my_cell3.make_order())
print(my_cell4, my_cell4.make_order())
print(my_cell5, my_cell5.make_order())
print(my_cell6, my_cell6.make_order())

# Output:
# Количество ячеек: 7
# *****
# **
# Количество ячеек: 1
# *
# Количество ячеек: 12
# *****
# *****
# **
# Количество ячеек: 4
# ****
#
# Process finished with exit code 0
